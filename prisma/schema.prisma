// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MediaType {
  IMAGE
  VIDEO  
}
enum Status {
  NOT_PROCESSED
  PROCESSING
  PROCESSED
  FAILURE
}

enum CreateMediaSourceResultStatus {
  PROCESSING
  DONE
  ERROR
}



model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  firstName String?
  lastName  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model MediaSource {
  id          Int      @id @default(autoincrement())
  url         String
  status      Status   @default(NOT_PROCESSED)
  isCSR       Boolean     @default(false)
  totalImages Int         @default(0)
  totalVideos Int         @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?

  media       Media[]
}


model Media {
  id          Int      @id @default(autoincrement())
  url         String
  name        String
  path        String
  type        MediaType   @default(IMAGE)
  status      Status      @default(NOT_PROCESSED)

  sourceId    Int  
  source      MediaSource @relation(fields: [sourceId], references: [id])
  
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?  
}

model CreateMediaSourceResult {
  id          Int      @id @default(autoincrement())
  code         String   @unique
  error        Json?  
  status      CreateMediaSourceResultStatus      @default(PROCESSING)
  
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?  
}